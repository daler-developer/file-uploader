{"version":3,"sources":["firebase/index.ts","redux/reducers/authReducer.ts","redux/reducers/commonReducer.ts","utils/hooks.ts","components/Alert.tsx","components/AuthenticatedRoute.tsx","components/ViewImage.tsx","components/LoadingButton.tsx","components/AuthForm.tsx","components/AuthPage.tsx","components/Container.tsx","assets/logo.jpg","components/Header.tsx","components/Layout.tsx","redux/reducers/postsReducer.ts","utils/helpers.ts","components/PopupMenu.tsx","components/Post.tsx","components/ProfilePage.tsx","components/UsersPage.tsx","components/Modal.tsx","components/AddPostModal.tsx","components/AddCategoryModal.tsx","components/App.tsx","redux/reducers/categoriesReducer.ts","redux/store.ts","index.tsx"],"names":["auth","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","GoogleAuthProvider","getAuth","db","getFirestore","storage","getStorage","authSlice","createSlice","name","initialState","currentUser","reducers","login","state","payload","logout","selectCurrentUser","authActions","actions","commonSlice","alert","imageViewingUrl","currentVisibleModal","openAlert","closeAlert","setImageViewingUrl","setCurrentVisibleModal","selectCurrentVisibleModal","common","commonActions","useAppDispatch","useDispatch","useAppSelector","useSelector","useQuery","search","useLocation","useMemo","URLSearchParams","useOnClickOutside","ref","handler","conditions","useEffect","listener","e","current","contains","target","every","el","Boolean","document","addEventListener","removeEventListener","dispatch","selectAlert","isHidden","setTimeout","className","classNames","type","text","children","path","exact","restProps","isAuthenticated","selectIsAuthenticated","imgRef","useRef","useState","imgScale","setImgScale","imgRotationDegree","setImgRotationDegree","imageUrl","selectImageViewingUrl","src","style","transform","onClick","isLoading","classes","root","disabled","spinner","setIsLoading","query","history","useHistory","location","isValidTabSelected","push","pathname","form","useFormik","initialValues","email","password","displayName","validate","v","errors","trim","onSubmit","getSelectedTab","createUserWithEmailAndPassword","signInWithEmailAndPassword","resetForm","get","handleSubmit","touched","placeholder","getFieldProps","LoadingButton","to","AuthForm","Container","logo","signOut","Header","postsSlice","setPosts","splice","length","deletePost","postIndex","findIndex","post","id","addPost","makePostFavourite","find","isFavourite","removePostFavourite","postsActions","formatBytes","bytes","decimals","k","dm","sizes","i","Math","floor","log","parseFloat","pow","toFixed","onClose","rootRef","console","data","isPopupHidden","setIsPopupHidden","isImgLoading","setIsImgLoading","setIsDeletingLoading","downloadLinkRef","handleDeletePostBtnClick","a","deleteDoc","doc","deleteObject","image","handleMoveToFavoruteBtnClick","updateDoc","handleRemoveFromFavoruteBtnClick","handleDownloadImageBtnClick","fetch","url","response","blob","click","title","desc","alt","onLoad","size","date","Date","parse","createdAt","getFullYear","getMonth","getDate","getGeneratedCreatedDate","motion","button","whileTap","scale","PopupMenu","download","hidden","searchInputValue","setSearchInputValue","isFilterMenuHidden","setIsFilterMenuHidden","params","posts","selectPosts","loadPosts","loadCategories","getDocs","collection","where","uid","snapshot","forEach","getSelectedFilter","getFilteredPosts","filtered","filter","includes","Layout","action","value","onChange","map","Post","modalRef","setImage","fileInputRef","nanoid","imageRef","uploadBytes","file","getDownloadURL","firestoreImage","authorUid","metadata","timeCreated","likesCount","addDoc","resetImage","Modal","URL","createObjectURL","isSubmitting","files","category","props","onAuthStateChanged","user","providerData","AuthPage","AuthenticatedRoute","ProfilePage","UsersPage","ViewImage","Alert","AddPostModal","AddCategoryModal","categoriesSlice","selectedId","list","store","configureStore","reducer","authReducer","commonReducer","postsReducer","categories","categoriesReducer","render","basename","App","getElementById"],"mappings":"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","file":"static/js/main.bac66e22.chunk.js","sourcesContent":["import { getFirestore } from '@firebase/firestore'\r\nimport { initializeApp } from 'firebase/app'\r\nimport { getAuth, GoogleAuthProvider } from 'firebase/auth'\r\nimport { getStorage } from 'firebase/storage'\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBOUI4Nbjyrar2z6Jdjp1M7ziRuDBnbQjo\",\r\n  authDomain: \"my-file-clone.firebaseapp.com\",\r\n  projectId: \"my-file-clone\",\r\n  storageBucket: \"my-file-clone.appspot.com\",\r\n  messagingSenderId: \"873320515679\",\r\n  appId: \"1:873320515679:web:a22244ae8a46cc9922b3ea\"\r\n}\r\n\r\n\r\nconst app = initializeApp(firebaseConfig)\r\n\r\nconst googleProvider = new GoogleAuthProvider()\r\n\r\nconst auth = getAuth()\r\nconst db = getFirestore()\r\nconst storage = getStorage()\r\n\r\nexport { app, auth, db, storage, googleProvider }\r\n","import { UserInfo } from '@firebase/auth'\r\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { RootState } from 'redux/store'\r\n\r\n\r\n\r\n\r\ntype AuthState = {\r\n  currentUser: UserInfo | null\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  currentUser: null\r\n}\r\n\r\nconst authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    login(state, { payload }: PayloadAction<UserInfo>) {\r\n      state.currentUser = payload\r\n    },\r\n    logout(state) {\r\n      state.currentUser = null\r\n    }\r\n  }\r\n})\r\n\r\nexport const selectCurrentUser = (state: RootState) => {\r\n  return state.auth.currentUser\r\n}\r\n\r\nexport const selectIsAuthenticated = (state: RootState) => {\r\n  return Boolean(state.auth.currentUser)\r\n}\r\n\r\nexport const authActions = authSlice.actions\r\n\r\nexport default authSlice.reducer\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { RootState } from 'redux/store'\r\n\r\n\r\n\r\ntype ModalsType = 'add-post' | 'add-category'\r\n\r\ntype AlertType = {\r\n  type: 'success' | 'error',\r\n  text: string\r\n}\r\n\r\ntype CommonState = {\r\n  alert: AlertType | null,\r\n  imageViewingUrl: string | null,\r\n  currentVisibleModal: ModalsType | null\r\n}\r\n\r\nconst initialState: CommonState = {\r\n  alert: null,\r\n  imageViewingUrl: null,\r\n  currentVisibleModal: null\r\n}\r\n\r\nconst commonSlice = createSlice({\r\n  name: 'common',\r\n  initialState,\r\n  reducers: {\r\n    openAlert(state, { payload }: PayloadAction<AlertType>) {\r\n      state.alert = payload\r\n    },\r\n    closeAlert(state) {\r\n      state.alert = null\r\n    },\r\n    setImageViewingUrl(state, { payload }: PayloadAction<string | null>) {\r\n      state.imageViewingUrl = payload\r\n    },\r\n    setCurrentVisibleModal(state, { payload }: PayloadAction<ModalsType | null>) {\r\n      state.currentVisibleModal = payload\r\n    }\r\n  }\r\n})\r\n\r\nexport const selectAlert = (state: RootState) => {\r\n  return state.common.alert\r\n}\r\n\r\nexport const selectImageViewingUrl = (state: RootState) => {\r\n  return state.common.imageViewingUrl\r\n}\r\n\r\nexport const selectCurrentVisibleModal = (state: RootState) => {\r\n  return state.common.currentVisibleModal\r\n}\r\n\r\nexport const commonActions = commonSlice.actions\r\n\r\nexport default commonSlice.reducer\r\n","import { RefObject, useEffect, useMemo } from 'react'\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport { useLocation } from 'react-router'\r\nimport { AppDispatch, RootState } from 'redux/store'\r\n\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\r\n\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n\r\nexport const useQuery = () => {\r\n  const { search } = useLocation()\r\n\r\n  return useMemo(() => new URLSearchParams(search), [search])\r\n}\r\n\r\nexport const useOnClickOutside = (ref: RefObject<HTMLElement>, handler: Function, conditions?: boolean[]) => {\r\n  useEffect(() => {\r\n    const listener = (e: any) => {\r\n      if (!ref.current || ref.current.contains(e.target)) {\r\n        return\r\n      }\r\n\r\n      if (conditions && !conditions.every((el) => Boolean(el) === true)) {\r\n        return \r\n      }\r\n\r\n      handler(e)\r\n    }\r\n\r\n    document.addEventListener('click', listener)\r\n\r\n    return () => {\r\n      document.removeEventListener('click', listener)\r\n    };\r\n  }, [ref, handler])\r\n}\r\n","import classNames from \"classnames\"\r\nimport { useEffect } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { commonActions, selectAlert } from \"redux/reducers/commonReducer\"\r\nimport { useAppSelector } from \"utils/hooks\"\r\n\r\n\r\ntype Props = {\r\n\r\n}\r\n\r\nexport default ({}: Props) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const alert = useAppSelector((state) => selectAlert(state))\r\n\r\n  const isHidden = () => {\r\n    return !Boolean(alert)\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!isHidden()) {\r\n      setTimeout(() => {\r\n        dispatch(commonActions.closeAlert())\r\n      }, 2000)\r\n    }\r\n  }, [isHidden()])\r\n\r\n\r\n  return (\r\n    <div className={classNames('alert', {\r\n      'alert--hidden': isHidden(),\r\n      'alert--success': alert?.type === 'success',\r\n      'alert--error': alert?.type === 'error' \r\n    })}>\r\n      {alert?.text}\r\n    </div>\r\n  )\r\n}\r\n","import { Route } from 'react-router-dom'\r\nimport { selectIsAuthenticated } from 'redux/reducers/authReducer'\r\nimport { useAppSelector } from 'utils/hooks'\r\n\r\ntype Props = {\r\n  children: any,\r\n  exact: boolean,\r\n  path: string,\r\n  restProps?: object\r\n}\r\n\r\nexport default ({ children, path, exact, restProps }: Props) => {\r\n\r\n  const isAuthenticated = useAppSelector((state) => selectIsAuthenticated(state))\r\n\r\n  return <>\r\n    {isAuthenticated ? (\r\n      <Route {...restProps} path={path} exact={exact}>\r\n        {children}\r\n      </Route>\r\n    ) : null}\r\n  </>\r\n}\r\n","import classNames from \"classnames\"\r\nimport { useRef, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { commonActions, selectImageViewingUrl } from \"redux/reducers/commonReducer\"\r\nimport { useAppSelector, useOnClickOutside } from \"utils/hooks\"\r\n\r\ntype Props = {\r\n\r\n}\r\n\r\nexport default  ({}: Props) => {\r\n  const imgRef = useRef<HTMLImageElement>(null!)\r\n\r\n  const [imgScale, setImgScale] = useState<number>(1)\r\n  const [imgRotationDegree, setImgRotationDegree] = useState<number>(0)\r\n\r\n  // useOnClickOutside(imgRef, () => dispatch(commonActions.setImageViewingUrl(null)))\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const imageUrl = useAppSelector((state) => selectImageViewingUrl(state))\r\n\r\n  const handleCloseBtnClick = () => {\r\n    dispatch(commonActions.setImageViewingUrl(null))\r\n  }\r\n\r\n  const handleZoomInBtnClick = () => {\r\n    setImgScale(imgScale + 0.05)\r\n  }\r\n\r\n  const handleZoomOutBtnClick = () => {\r\n    setImgScale(imgScale - 0.05)\r\n  }\r\n\r\n  const handleRotateLeftBtnClick = () => {\r\n    setImgRotationDegree(imgRotationDegree - 5)\r\n  }\r\n\r\n  const handleRotateRightBtnClick = () => {\r\n    setImgRotationDegree(imgRotationDegree + 5)\r\n  }\r\n\r\n  return (\r\n    <div className={classNames('view-image', { 'view-image--hidden': !imageUrl })}>\r\n      \r\n      {imageUrl && (\r\n        <img\r\n          className=\"view-image__img\"\r\n          src={imageUrl}\r\n          ref={imgRef}\r\n          style={{\r\n            transform: `scale(${imgScale}) rotate(${imgRotationDegree}deg)`\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <ul className=\"view-image__actions\">\r\n        <li className=\"view-image__actions-item\">\r\n          <button type=\"button\" className=\"view-image__actions-btn\" onClick={handleZoomInBtnClick}>\r\n            <span className=\"view-image__icon view-image__actions-icon material-icons-outlined\">\r\n              add\r\n            </span>\r\n          </button>\r\n        </li>\r\n        <li className=\"view-image__actions-item\">\r\n          <button type=\"button\" className=\"view-image__actions-btn\" onClick={handleZoomOutBtnClick}>\r\n            <span className=\"view-image__icon view-image__actions-icon material-icons-outlined\">\r\n              remove\r\n            </span>\r\n          </button>\r\n        </li>\r\n        <li className=\"view-image__actions-item\">\r\n          <button type=\"button\" className=\"view-image__actions-btn\" onClick={handleRotateRightBtnClick}>\r\n            <span className=\"view-image__icon view-image__actions-icon material-icons-outlined\">\r\n              rotate_right\r\n            </span>\r\n          </button>\r\n        </li>\r\n        <li className=\"view-image__actions-item\">\r\n          <button type=\"button\" className=\"view-image__actions-btn\" onClick={handleRotateLeftBtnClick}>\r\n            <span className=\"view-image__icon view-image__actions-icon material-icons-outlined\">\r\n              rotate_left\r\n            </span>\r\n          </button>\r\n        </li>\r\n        <li className=\"view-image__actions-item\">\r\n          <button type=\"button\" className=\"view-image__actions-btn\" onClick={handleCloseBtnClick}>\r\n            <span className=\"view-image__icon view-image__actions-icon material-icons-outlined\">\r\n              close\r\n            </span>\r\n          </button>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* <button className=\"view-image__close-btn\" onClick={handleCloseBtnClick}>\r\n        <span className=\"view-image__close-icon material-icons-outlined\">\r\n          close\r\n        </span>\r\n      </button> */}\r\n\r\n    </div>\r\n  )\r\n}\r\n","import classNames from 'classnames'\r\n\r\ntype Props = {\r\n  isLoading: boolean,\r\n  children: any,\r\n  restProps?: {\r\n    root?: object,\r\n    spinner?: object\r\n  },\r\n  classes?: {\r\n    root?: string,\r\n    spinner?: string\r\n  },\r\n  className?: string,\r\n  type?: 'button' | 'reset' | 'submit'\r\n}\r\n\r\nexport default  ({ isLoading, className, restProps, classes, children, type }: Props) => {\r\n  return (\r\n    <button {...restProps?.root} type={type || 'button'} className={classNames('loading-button', classes?.root, className)} disabled={isLoading}>\r\n      {isLoading ? (\r\n        <div\r\n          className={classNames('loading-button__spinner', classes?.spinner)}\r\n          {...restProps?.spinner}\r\n        />\r\n      ) : children}\r\n    </button>\r\n  )\r\n}\r\n","import { createUserWithEmailAndPassword, signInWithEmailAndPassword, updateProfile } from '@firebase/auth'\r\nimport classNames from 'classnames'\r\nimport { auth } from 'firebase'\r\nimport { FormikErrors, useFormik } from 'formik'\r\nimport { useEffect, useState } from 'react'\r\nimport LoadingButton from './LoadingButton'\r\nimport { useQuery } from 'utils/hooks'\r\nimport { useHistory, useLocation } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { commonActions } from 'redux/reducers/commonReducer'\r\nimport { FirebaseError } from 'firebase/app'\r\n\r\n\r\ntype Props = {\r\n\r\n}\r\n\r\ntype FormValues = {\r\n  email: string,\r\n  displayName: string,\r\n  password: string\r\n}\r\n\r\ntype TabType = 'login' | 'register'\r\n\r\nexport default  ({}: Props) => {\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n\r\n  const query = useQuery()\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (!isValidTabSelected()) {\r\n      history.push(`${location.pathname}?tab=login`)\r\n    }\r\n  }, [])\r\n\r\n  const form = useFormik({\r\n    initialValues: {\r\n      email: '',\r\n      password: '',\r\n      displayName: ''\r\n    },\r\n    validate(v) {\r\n      const errors: FormikErrors<FormValues> = {}\r\n      \r\n      if (!v.email.trim()) {\r\n        errors.email = 'Empty email'\r\n      }\r\n\r\n      // if (!v.displayName.trim() && getSelectedTab() === 'register') {\r\n      //   errors.displayName = 'Empty display name'\r\n      // }\r\n\r\n      if (!v.password.trim()) {\r\n        errors.password = 'Empty password'\r\n      }\r\n\r\n      return errors\r\n    },\r\n    async onSubmit(v) {\r\n      try {\r\n        setIsLoading(true)\r\n\r\n        if (getSelectedTab() === 'register') {\r\n          await createUserWithEmailAndPassword(auth, v.email, v.password)\r\n\r\n          dispatch(commonActions.openAlert({ type: 'success', text: 'Signed up' }))\r\n        } else if (getSelectedTab() === 'login') {\r\n          await signInWithEmailAndPassword(auth, v.email, v.password)\r\n\r\n          dispatch(commonActions.openAlert({ type: 'success', text: 'Signed in' }))\r\n        }\r\n      } catch (e) {\r\n        if (getSelectedTab() === 'login') {\r\n          dispatch(commonActions.openAlert({ type: 'error', text: 'Cannot login' }))\r\n        } else {\r\n          dispatch(commonActions.openAlert({ type: 'error', text: 'Cannot register' }))\r\n        }\r\n      } finally {\r\n        setIsLoading(false)\r\n        form.resetForm()\r\n      }\r\n    }\r\n  })\r\n\r\n  const getSelectedTab = (): TabType => {\r\n    return query.get('tab') as TabType\r\n  }\r\n\r\n  const isValidTabSelected = (): boolean => {\r\n    if (getSelectedTab() !== 'login' && getSelectedTab() !== 'register' && !getSelectedTab()) {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  return (\r\n    <form className=\"auth-form\" onSubmit={form.handleSubmit}>\r\n      <h1 className=\"auth-form__title\">\r\n        {getSelectedTab() === 'login' && 'Login'}\r\n        {getSelectedTab() === 'register' && 'Register'}\r\n      </h1>\r\n      <div className=\"auth-form__input-group\">\r\n        <div className=\"auth-form__icon-wrapper\">\r\n          <span className=\"auth-form__icon material-icons-outlined\">email</span>\r\n        </div>\r\n        <input\r\n          type=\"text\"\r\n          className={classNames('auth-form__input', { 'auth-form__input--error': form.touched.email && form.errors.email })}\r\n          placeholder=\"Email\"\r\n          {...form.getFieldProps('email')}\r\n        />\r\n      </div>\r\n      {/* {getSelectedTab() === 'register' && (\r\n        <div className=\"auth-form__input-group\">\r\n          <div className=\"auth-form__icon-wrapper\">\r\n            <span className=\"auth-form__icon material-icons-outlined\">manage_accounts</span>\r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            className={classNames('auth-form__input', { 'auth-form__input--error': form.touched.displayName && form.errors.displayName })}\r\n            placeholder=\"Display name\"\r\n            {...form.getFieldProps('displayName')}\r\n          />\r\n        </div>\r\n      )} */}\r\n      <div className=\"auth-form__input-group\">\r\n        <div className=\"auth-form__icon-wrapper\">\r\n          <span className=\"auth-form__icon material-icons-outlined\">lock</span>\r\n        </div>\r\n        <input\r\n          type=\"password\"\r\n          className={classNames('auth-form__input', { 'auth-form__input--error': form.touched.password && form.errors.password })}\r\n          placeholder=\"Password\"\r\n          {...form.getFieldProps('password')}\r\n        />\r\n      </div>\r\n      <LoadingButton isLoading={isLoading} classes={{ root: 'auth-form__submit-btn' }} type=\"submit\">\r\n        {getSelectedTab() === 'login' && 'Login'}\r\n        {getSelectedTab() === 'register' && 'Register'}\r\n      </LoadingButton>\r\n\r\n      {getSelectedTab() === 'register' && (\r\n        <Link to={`${location.pathname}?tab=login`} className=\"auth-form__footer-link\">\r\n          Already have an account? Login\r\n        </Link>\r\n      )}\r\n\r\n      {getSelectedTab() === 'login' && (\r\n        <Link to={`${location.pathname}?tab=register`} className=\"auth-form__footer-link\">\r\n          Don't have an account? Sign Up\r\n        </Link>\r\n      )}\r\n    </form>\r\n  )\r\n}\r\n","import AuthForm from './AuthForm'\r\n\r\n\r\ntype Props = {\r\n\r\n}\r\n\r\nexport default  ({ }: Props) => {\r\n\r\n  return (\r\n    <div className=\"auth-page\">\r\n      <AuthForm />\r\n    </div>\r\n  )\r\n}\r\n","\r\ntype Props = {\r\n  children: any\r\n}\r\n\r\nexport default  ({ children }: Props) => {\r\n  return (\r\n    <div className={'container'}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logo.b23f6673.jpg\";","import { auth } from 'firebase'\r\nimport { signOut } from 'firebase/auth'\r\nimport Container from './Container'\r\nimport logo from 'assets/logo.jpg'\r\n\r\n\r\ntype Props = {\r\n  \r\n}\r\n\r\nexport default ({ }: Props) => {\r\n\r\n  const handleLogoutBtnClick = () => {\r\n    signOut(auth)\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <Container>\r\n        <div className=\"header__body\">\r\n          <img className=\"header__logo\" src={logo} />\r\n          <button className=\"header__logout-btn\" onClick={handleLogoutBtnClick}>\r\n            <span className=\"header__logout-icon material-icons-outlined\">logout</span>\r\n            <span>Log out</span>\r\n          </button>\r\n        </div>\r\n      </Container>\r\n    </header>\r\n  )\r\n}\r\n\r\n","import classNames from 'classnames'\r\nimport Header from './Header'\r\nimport Container from './Container'\r\n\r\n\r\ntype Props = {\r\n  children: any,\r\n  classes?: {\r\n    root?: string\r\n  }\r\n}\r\n\r\nexport default  ({ children, classes }: Props) => {\r\n  return <>\r\n    <div className={classNames('layout', classes?.root )}>\r\n      <Container>\r\n        {children}\r\n      </Container>\r\n    </div>\r\n\r\n    <Header />\r\n  </>\r\n}\r\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\r\nimport { RootState } from 'redux/store'\r\n\r\n\r\n\r\nexport type ReduxPost = {\r\n  id: string,\r\n  image: {\r\n    url: string,\r\n    path: string,\r\n    size: number,\r\n    createdAt: string\r\n  },\r\n  likesCount: number,\r\n  authorUid: string,\r\n  desc: string,\r\n  isFavourite: boolean,\r\n}\r\n\r\ntype PostsState = ReduxPost[]\r\n\r\n\r\nconst initialState: PostsState = [\r\n  \r\n]\r\n\r\nconst postsSlice = createSlice({\r\n  name: 'posts',\r\n  initialState,\r\n  reducers: {\r\n    setPosts(state, { payload }: PayloadAction<ReduxPost[]>) {\r\n      state.splice(0, state.length)\r\n      state.push(...payload)\r\n    },\r\n    deletePost(state, { payload }: PayloadAction<string>) {\r\n      const postIndex = state.findIndex((post) => post.id === payload)\r\n      state.splice(postIndex, 1)\r\n      // const filtered = state.filter((post) => post.id !== payload)\r\n      // state.push(...filtered)\r\n    },\r\n    addPost(state, { payload }: PayloadAction<ReduxPost>) {\r\n      state.push(payload)\r\n    },\r\n    makePostFavourite(state, { payload }: PayloadAction<string>) {\r\n      const post = state.find((post) => post.id === payload)\r\n      if (post) post.isFavourite = true\r\n    },\r\n    removePostFavourite(state, { payload }: PayloadAction<string>) {\r\n      const post = state.find((post) => post.id === payload)\r\n      if (post) post.isFavourite = false\r\n    },\r\n  }\r\n})\r\n\r\nexport const selectPosts = (state: RootState) => {\r\n  return state.posts\r\n}\r\n\r\nexport const postsActions = postsSlice.actions\r\n\r\nexport default postsSlice.reducer\r\n","export const formatBytes = (bytes: number, decimals = 2) => {\r\n  if (bytes === 0) return '0 Bytes';\r\n\r\n  const k = 1024;\r\n  const dm = decimals < 0 ? 0 : decimals;\r\n  const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\r\n\r\n  const i = Math.floor(Math.log(bytes) / Math.log(k));\r\n\r\n  return parseFloat((bytes / Math.pow(k, i)).toFixed(dm)) + ' ' + sizes[i];\r\n}\r\n","import classNames from 'classnames'\r\nimport { useRef } from 'react'\r\nimport { useOnClickOutside } from 'utils/hooks'\r\n\r\n\r\ntype Props = {\r\n  isHidden: boolean,\r\n  children: any,\r\n  className?: string,\r\n  onClose: Function\r\n}\r\n\r\nexport default ({ children, isHidden, className, onClose }: Props) => {\r\n  const rootRef = useRef<HTMLDivElement>(null!)\r\n\r\n  useOnClickOutside(rootRef, () => {\r\n    onClose()\r\n    console.log('outside')\r\n  }, [!isHidden])\r\n\r\n  return (\r\n    <div className={classNames('popup-menu', { 'popup-menu--hidden': isHidden }, className)} ref={rootRef}>\r\n      {children}\r\n    </div>\r\n  )\r\n}\r\n","import classNames from \"classnames\"\r\nimport { db, storage } from \"firebase\"\r\nimport { deleteDoc, doc, updateDoc } from \"firebase/firestore\"\r\nimport { deleteObject, ref } from \"firebase/storage\"\r\nimport { useRef, useState } from \"react\"\r\nimport { selectCurrentUser } from \"redux/reducers/authReducer\"\r\nimport { commonActions } from \"redux/reducers/commonReducer\"\r\nimport { postsActions, ReduxPost } from \"redux/reducers/postsReducer\"\r\nimport { formatBytes } from \"utils/helpers\"\r\nimport { useAppDispatch, useAppSelector } from \"utils/hooks\"\r\nimport PopupMenu from \"./PopupMenu\"\r\nimport { motion } from 'framer-motion'\r\n\r\ntype Props = {\r\n  data: ReduxPost,\r\n  classes?: {\r\n    root?: string\r\n  }\r\n}\r\n\r\nexport default  ({ data, classes }: Props) => {\r\n  const [isPopupHidden, setIsPopupHidden] = useState<boolean>(true)\r\n  const [isImgLoading, setIsImgLoading] = useState<boolean>(true)\r\n  const [isDeletingLoading, setIsDeletingLoading] = useState<boolean>(false)\r\n\r\n  const downloadLinkRef = useRef<HTMLAnchorElement>(null!)\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const currentUser = useAppSelector((state) => selectCurrentUser(state))\r\n\r\n  const getGeneratedCreatedDate = (): string => {\r\n    const date = new Date(Date.parse(data.image.createdAt))\r\n\r\n    return `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`\r\n  }\r\n\r\n  const handleOpenMenuBtnClick = () => {\r\n    setIsPopupHidden(false)\r\n  }\r\n\r\n  const handleViewBtnClick = () => {\r\n    dispatch(commonActions.setImageViewingUrl(data.image.url))\r\n  }\r\n\r\n  const handleDeletePostBtnClick = async () => {\r\n    try {\r\n      setIsDeletingLoading(true)\r\n\r\n      // update firebase state\r\n      await deleteDoc(doc(db, 'posts', data.id))\r\n      await deleteObject(ref(storage, data.image.path))\r\n      \r\n      // update redux state\r\n      dispatch(postsActions.deletePost(data.id))\r\n\r\n      dispatch(commonActions.openAlert({ type: 'success', text: 'Deleted' }))\r\n    } catch {\r\n      dispatch(commonActions.openAlert({ type: 'error', text: 'Cannot delete' }))\r\n    } finally {\r\n      setIsDeletingLoading(false)\r\n    }\r\n  }\r\n\r\n  const handleMoveToFavoruteBtnClick = async () => {\r\n    try {\r\n      // update firestore\r\n      await updateDoc(doc(db, 'posts', data.id), {\r\n        isFavourite: true\r\n      })\r\n\r\n      // update redux state\r\n      dispatch(postsActions.makePostFavourite(data.id))\r\n\r\n    } catch {\r\n\r\n    } finally {\r\n\r\n    }\r\n  }\r\n\r\n  const handleRemoveFromFavoruteBtnClick = async () => {\r\n    // update firestore\r\n    await updateDoc(doc(db, 'posts', data.id), {\r\n      isFavourite: false\r\n    })\r\n\r\n    // update redux state\r\n    dispatch(postsActions.removePostFavourite(data.id))\r\n  }\r\n\r\n  const handleImgLoad = () => {\r\n    setIsImgLoading(false)\r\n  }\r\n\r\n  const handleDownloadImageBtnClick = async () => {\r\n    const response = await fetch(data.image.url)\r\n    const blob = await response.blob()\r\n\r\n    \r\n    downloadLinkRef.current.click()\r\n  }\r\n\r\n  return (\r\n    <div className={classNames('post', classes?.root)} title={data.desc}>\r\n\r\n      <div className=\"post__body\">\r\n\r\n        <div className=\"post__img-wrapper\">\r\n          <div className={classNames('post__img-loader', { 'post__img-loader--hidden': !isImgLoading })}>\r\n            <div className=\"post__img-loader-spinner\" />\r\n          </div>\r\n          <img\r\n            src={data.image.url}\r\n            alt=\"Image\"\r\n            className={classNames('post__img', { 'post__img--hidden': isImgLoading })}\r\n            onLoad={handleImgLoad}\r\n          />\r\n          <button type=\"button\" className=\"post__view-img-btn\" onClick={handleViewBtnClick}>\r\n            <span className=\"post__icon post__see-icon material-icons-outlined\">\r\n              visibility\r\n            </span>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"post__info\">\r\n          <p className=\"post__desc\">\r\n            {data.desc}\r\n          </p>\r\n          <div className=\"post__meta-data\">\r\n            {formatBytes(data.image.size)}\r\n            <span className=\"post__dot\" />\r\n            {getGeneratedCreatedDate()}\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <div className=\"post__actions\">\r\n        <motion.button type=\"button\" className=\"post__actions-btn post__download-btn post__download-img-btn\" onClick={handleDownloadImageBtnClick} whileTap={{ scale: .9 }}>\r\n          <span className=\"post__icon material-icons-outlined\">\r\n            download\r\n          </span>\r\n        </motion.button>\r\n        {data.isFavourite ? (\r\n          <motion.button className=\"post__actions-btn post__actions-remove-favourite-btn\" onClick={handleRemoveFromFavoruteBtnClick} whileTap={{ scale: .9 }}>\r\n            <span className=\"post__icon post__heart-icon post__heart-filled-icon material-icons-outlined\">\r\n              favorite\r\n            </span>\r\n          </motion.button>\r\n        ) : (\r\n          <motion.button className=\"post__actions-btn\" onClick={handleMoveToFavoruteBtnClick} whileTap={{ scale: .9 }}>\r\n            <span className=\"post__icon post__heart-icon post__heart-unfilled-icon material-icons-outlined\">\r\n              favorite_border\r\n            </span>\r\n          </motion.button>\r\n        )}\r\n        <motion.button className=\"post__actions-btn post__actions-delete-btn\" onClick={handleDeletePostBtnClick} whileTap={{ scale: .9 }}>\r\n          <span className=\"post__icon material-icons-outlined\">\r\n            delete\r\n          </span>\r\n        </motion.button>\r\n        <motion.button className={classNames('post__actions-btn post__actions-open-menu-btn', 'post__actions-open-menu-btn--hidden')} onClick={handleOpenMenuBtnClick} whileTap={{ scale: .9 }}>\r\n          <span className=\"post__icon post__more-icon material-icons-outlined\">\r\n            more_vert\r\n          </span>\r\n        </motion.button>\r\n      </div>\r\n\r\n      <PopupMenu isHidden={isPopupHidden} onClose={() => setIsPopupHidden(true)} className=\"post__popup-menu\">\r\n        <ul className=\"post__popup-menu-btns\">\r\n          <li className=\"post__popup-menu-btns-item\">\r\n            <button className=\"post__popup-menu-btn\" onClick={handleDeletePostBtnClick}>\r\n              <span className=\"post__icon post__popup-menu-icon material-icons-outlined\">\r\n                delete\r\n              </span>\r\n              Delete\r\n            </button>\r\n          </li>\r\n          {!data.isFavourite ? (\r\n            <li className=\"post__popup-menu-btns-item\">\r\n              <button className=\"post__popup-menu-btn\" onClick={handleMoveToFavoruteBtnClick}>\r\n                <span className=\"post__icon post__popup-menu-icon material-icons-outlined\">\r\n                  favorite_border\r\n                </span>\r\n                Move to favourite\r\n              </button>\r\n            </li>\r\n          ) : (\r\n            <li className=\"post__popup-menu-btns-item\">\r\n              <button className=\"post__popup-menu-btn\" onClick={handleRemoveFromFavoruteBtnClick}>\r\n                <span className=\"post__icon post__popup-menu-icon material-icons-outlined\">\r\n                  favorite_border\r\n                </span>\r\n                Remove from favourite\r\n              </button>\r\n            </li>\r\n          )}\r\n        </ul>\r\n      </PopupMenu>\r\n\r\n      <a ref={downloadLinkRef} download hidden>download</a>\r\n    </div>\r\n  )\r\n}\r\n","import { collection, getDocs, query, where } from '@firebase/firestore'\r\nimport Layout from './Layout'\r\nimport Post from './Post'\r\nimport { db } from 'firebase'\r\nimport { FirestorePost } from 'firebase/documentTypes'\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport { postsActions, ReduxPost, selectPosts } from 'redux/reducers/postsReducer'\r\nimport { useAppDispatch, useAppSelector, useOnClickOutside, useQuery } from 'utils/hooks'\r\nimport { commonActions } from 'redux/reducers/commonReducer'\r\nimport PopupMenu from './PopupMenu'\r\nimport { useHistory, useLocation } from 'react-router-dom'\r\nimport { selectCurrentUser } from 'redux/reducers/authReducer'\r\nimport { motion } from 'framer-motion'\r\n\r\n\r\n\r\n\r\ntype Props = {\r\n\r\n}\r\n\r\ntype FilterType = 'all' | 'favourite' | 'not-favourite' | null\r\n\r\nexport default  ({}: Props) => {\r\n  const [searchInputValue, setSearchInputValue] = useState<string>('')\r\n  const [isLoading, setIsLoading] = useState<boolean>(false)\r\n  const [isFilterMenuHidden, setIsFilterMenuHidden] = useState<boolean>(true)\r\n\r\n  const history = useHistory()\r\n  const location = useLocation()\r\n  const params = useQuery()\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const currentUser = useAppSelector((state) => selectCurrentUser(state))\r\n  const posts = useAppSelector((state) => selectPosts(state))\r\n\r\n  useEffect(() => {\r\n    loadPosts()\r\n    loadCategories()\r\n  }, [])\r\n\r\n  const loadPosts = async () => {\r\n    try {\r\n      setIsLoading(true)\r\n      \r\n      const snapshot = await getDocs(query(collection(db, 'posts'), where('authorUid', '==', currentUser!.uid)))\r\n\r\n      const posts: ReduxPost[] = []\r\n\r\n      snapshot.forEach((doc) => {\r\n        const data = doc.data() as FirestorePost\r\n        posts.push({\r\n          id: doc.id,\r\n          ...data\r\n        })\r\n      })\r\n\r\n      dispatch(postsActions.setPosts(posts))\r\n    } catch {\r\n      dispatch(commonActions.openAlert({ type: 'error', text: 'Cannot load' }))\r\n    } finally {\r\n      setIsLoading(false)\r\n    }\r\n  }\r\n\r\n  const loadCategories = async () => {\r\n    \r\n  }\r\n\r\n  const filterLabels = {\r\n    'all': 'All',\r\n    'favourite': 'Favourite',\r\n    'not-favourite': 'Not Favourite'\r\n  }\r\n\r\n  const getSelectedFilter = (): FilterType => {\r\n    return params.get('filter') as FilterType\r\n  }\r\n\r\n  const getFilteredPosts = () => {\r\n    let filtered: ReduxPost[] = []\r\n    \r\n    filtered = posts.filter((post) => {\r\n      if (post.desc.includes(searchInputValue)) {\r\n        return true\r\n      }\r\n    })\r\n\r\n    switch (getSelectedFilter()) {\r\n      case 'all':\r\n        filtered = filtered\r\n        break\r\n      case 'favourite':\r\n        filtered = filtered.filter((post) => post.isFavourite == true)\r\n        break\r\n      case 'not-favourite':\r\n        filtered = filtered.filter((post) => post.isFavourite == false)\r\n        break\r\n      default:\r\n        filtered = filtered\r\n    }\r\n\r\n    return filtered\r\n  }\r\n\r\n  const handleFilterBtnClick = () => {\r\n    setIsFilterMenuHidden(!isFilterMenuHidden)\r\n  }\r\n\r\n  const handleReloadBtnClick = () => {\r\n    loadPosts()\r\n  }\r\n\r\n  const handleAddPostBtn = () => {\r\n    dispatch(commonActions.setCurrentVisibleModal('add-post'))\r\n  }\r\n\r\n  const handleFilterFavouruteBtnClick = () => {\r\n    history.push(`${location.pathname}?filter=favourite`)\r\n\r\n    setIsFilterMenuHidden(true)\r\n  }\r\n\r\n  const handleFilterAllBtnClick = () => {\r\n    history.push(`${location.pathname}?filter=all`)\r\n\r\n    setIsFilterMenuHidden(true)\r\n  }\r\n\r\n  const handleFilterNotFavouruteBtnClick = () => {\r\n    history.push(`${location.pathname}?filter=not-favourite`)\r\n\r\n    setIsFilterMenuHidden(true)\r\n  }\r\n\r\n  return <>\r\n    <Layout classes={{ root: 'profile-page' }}>\r\n      \r\n      <div className=\"profile-page__top-bar\">\r\n\r\n        <form className=\"profile-page__search-input-wrapper\" action=\"#\">\r\n          <span className=\"profile-page__icon profile-page__search-icon material-icons-outlined\">\r\n            search\r\n          </span>\r\n          <input\r\n            type=\"text\"\r\n            className=\"profile-page__search-input\"\r\n            placeholder=\"Search...\"\r\n            size={1}\r\n            value={searchInputValue}\r\n            onChange={(e) => setSearchInputValue(e.target.value)}\r\n          />\r\n        </form>\r\n\r\n        <div className=\"profile-page__filter-btn-wrapper\">\r\n          <button type=\"button\" className=\"profile-page__filter-btn\" onClick={handleFilterBtnClick}>\r\n            <span className=\"profile-page__icon material-icons-outlined\">sort</span>\r\n            {filterLabels[getSelectedFilter() || 'all']}\r\n          </button>\r\n\r\n          <PopupMenu className=\"profile-page__filter-menu\" isHidden={isFilterMenuHidden} onClose={() => setIsFilterMenuHidden(true)}>\r\n            <ul className=\"profile-page__filter-menu-btns\">\r\n              <li className=\"profile-page__filter-menu-btns-item\">\r\n                <button type=\"button\" className=\"profile-page__filter-menu-btn\" onClick={handleFilterAllBtnClick}>\r\n                  All\r\n                </button>\r\n              </li>\r\n              <li className=\"profile-page__filter-menu-btns-item\">\r\n                <button type=\"button\" className=\"profile-page__filter-menu-btn\" onClick={handleFilterFavouruteBtnClick}>\r\n                  Favourite\r\n                </button>\r\n              </li>\r\n              <li className=\"profile-page__filter-menu-btns-item\">\r\n                <button type=\"button\" className=\"profile-page__filter-menu-btn\" onClick={handleFilterNotFavouruteBtnClick}>\r\n                  Not favorute\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </PopupMenu>\r\n        </div>\r\n\r\n        <button className=\"profile-page__add-post-btn\" onClick={handleAddPostBtn}>\r\n          <span className=\"profile-page__icon material-icons-outlined\">\r\n            add\r\n          </span>\r\n          New\r\n        </button>\r\n\r\n      </div>\r\n\r\n\r\n      <div className=\"profile-page__posts\">\r\n        {getFilteredPosts().map((post) => (\r\n          <Post\r\n            key={post.id}\r\n            data={post}\r\n            classes={{ root: 'profile-page__post' }}\r\n          />\r\n        ))}\r\n      </div>\r\n\r\n      {!isLoading && getFilteredPosts().length === 0 && (\r\n        <h3 className=\"profile-page__no-posts-title\">No posts</h3>\r\n      )}\r\n\r\n      {!isLoading ? (\r\n        <motion.button type=\"button\" className=\"profile-page__reload-btn\" onClick={handleReloadBtnClick} whileTap={{ scale: .9 }}>\r\n          <span className=\"profile-page__icon profile-page__reload-icon material-icons-outlined\">\r\n            refresh\r\n          </span>\r\n        </motion.button>\r\n      ) : (\r\n        <div className=\"profile-page__loader\" />\r\n      )}\r\n      \r\n    </Layout>\r\n  </>\r\n}\r\n","import Layout from './Layout'\r\n\r\n\r\ntype Props = {\r\n\r\n}\r\n\r\nexport default  ({}: Props) => {\r\n\r\n  return (\r\n    <Layout>\r\n      Users Page\r\n    </Layout>\r\n  )\r\n}\r\n","import classNames from \"classnames\"\r\nimport { useRef } from \"react\"\r\nimport { useOnClickOutside } from \"utils/hooks\"\r\n\r\ntype Props = {\r\n  title: string,\r\n  children: any,\r\n  isHidden: boolean,\r\n  onClose: Function,\r\n  className?: string,\r\n}\r\n\r\nexport default ({ className, children, isHidden, title, onClose }: Props) => {\r\n  const modalRef = useRef<any>(null!)\r\n\r\n  useOnClickOutside(modalRef, () => {\r\n    onClose()\r\n  }, [!isHidden])\r\n\r\n  const handleCloseBtnClick = () => {\r\n    onClose()\r\n  }\r\n\r\n  return (\r\n    <div className={classNames('modal', { 'modal--hidden': isHidden })}>\r\n      <div className={classNames('modal__wrapper', className)} ref={modalRef}>\r\n\r\n        <div className=\"modal__header\">\r\n          <h2 className=\"modal__title\">\r\n            {title}\r\n          </h2>\r\n          <button className=\"modal__close-btn\" onClick={handleCloseBtnClick}>\r\n            <span className=\"modal__icon modal__close-icon material-icons-outlined\">\r\n              close\r\n            </span>\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"modal__body\">\r\n          {children}\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { nanoid } from \"@reduxjs/toolkit\"\r\nimport classNames from \"classnames\"\r\nimport { db, storage } from \"firebase\"\r\nimport { addDoc, collection } from 'firebase/firestore'\r\nimport { FirestorePost } from \"firebase/documentTypes\"\r\nimport { getDownloadURL, ref, uploadBytes } from \"firebase/storage\"\r\nimport { FormikErrors, useFormik } from \"formik\"\r\nimport { SyntheticEvent, useRef, useState } from \"react\"\r\nimport { selectCurrentUser } from \"redux/reducers/authReducer\"\r\nimport { useAppDispatch, useAppSelector } from \"utils/hooks\"\r\nimport { commonActions, selectCurrentVisibleModal } from \"redux/reducers/commonReducer\"\r\nimport LoadingButton from \"./LoadingButton\"\r\nimport Modal from \"./Modal\"\r\nimport { postsActions } from \"redux/reducers/postsReducer\"\r\n\r\ntype Props = {\r\n\r\n}\r\n\r\ntype FormValues = {\r\n  desc: string\r\n}\r\n\r\nexport default ({}: Props) => {\r\n  const [image, setImage] = useState<File | null>(null)\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const fileInputRef = useRef<HTMLInputElement>(null!)\r\n\r\n  const isHidden = useAppSelector((state) => selectCurrentVisibleModal(state)) !== 'add-post'\r\n  const currentUser = useAppSelector((state) => selectCurrentUser(state))\r\n\r\n  const form = useFormik({\r\n    initialValues: {\r\n      desc: ''\r\n    },\r\n    validate(v) {\r\n      const errors: FormikErrors<FormValues & { image: File | null }> = {}\r\n\r\n      if (!v.desc.trim()) {\r\n        errors.desc = 'empty desc'\r\n      }\r\n\r\n      if (!image) {\r\n        errors.image = 'empty image'\r\n      }\r\n\r\n      return errors\r\n    },\r\n    async onSubmit(v) {\r\n      try {\r\n        // update firestore state\r\n        const path = `images/${nanoid()}_${image!.name}`\r\n        const imageRef = ref(storage, path)\r\n\r\n        const file = await uploadBytes(imageRef, image!)\r\n        const imageUrl = await getDownloadURL(imageRef)\r\n\r\n        const firestoreImage: FirestorePost = {\r\n          authorUid: currentUser!.uid,\r\n          image: {\r\n            url: imageUrl,\r\n            size: file.metadata.size,\r\n            path: path,\r\n            createdAt: file.metadata.timeCreated\r\n          },\r\n          likesCount: 0,\r\n          desc: v.desc,\r\n          isFavourite: false\r\n        }\r\n        const doc = await addDoc(collection(db, 'posts'), firestoreImage)\r\n\r\n        // update redux state\r\n        dispatch(postsActions.addPost({\r\n          id: doc.id,\r\n          authorUid: currentUser!.uid,\r\n          desc: v.desc,\r\n          likesCount: 0,\r\n          image: {\r\n            url: imageUrl,\r\n            size: file.metadata.size,\r\n            path: path,\r\n            createdAt: file.metadata.timeCreated\r\n          },\r\n          isFavourite: false\r\n        }))\r\n\r\n        dispatch(commonActions.openAlert({ type: 'success', text: 'Image created' }))\r\n      } catch (e) {\r\n        dispatch(commonActions.openAlert({ type: 'error', text: 'Cannot create image' }))\r\n      } finally {\r\n        form.resetForm()\r\n        resetImage()\r\n      }\r\n    }\r\n  })\r\n\r\n  const resetImage = () => {\r\n    setImage(null)\r\n    fileInputRef.current.value = ''\r\n  }\r\n\r\n  const handleModalClose = () => {\r\n    dispatch(commonActions.setCurrentVisibleModal(null))\r\n\r\n    form.resetForm()\r\n    resetImage()\r\n  }\r\n\r\n  const handleRemoveSelectedImageClick = () => {\r\n    resetImage()\r\n  }\r\n\r\n  const handleUploadImageBtnClick = () => {\r\n    fileInputRef.current.click()\r\n  }\r\n\r\n  const handleFileInputChange = (e: SyntheticEvent) => {\r\n    const files = (e.target as HTMLInputElement).files\r\n\r\n    if (files) {\r\n      setImage(files[0])\r\n    } else {\r\n      setImage(null)\r\n    }\r\n  }\r\n\r\n  return <>\r\n    <Modal isHidden={isHidden} title=\"Add image\" className=\"add-post-modal__modal\" onClose={handleModalClose}>\r\n      <form className=\"add-post-modal__form\" onSubmit={form.handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className={classNames('add-post-modal__desc-input', { 'add-post-modal__desc-input--error': form.touched.desc && form.errors.desc })}\r\n          placeholder=\"Image description\"\r\n          {...form.getFieldProps('desc')}\r\n        />\r\n\r\n        {image ? (\r\n          <div className=\"add-post-modal__selected-image-wrapper\">\r\n            <img  \r\n              src={URL.createObjectURL(image)}\r\n              className=\"add-post-modal__selected-image\"\r\n            />\r\n            <button type=\"button\" className=\"add-post-modal__remove-selected-image-btn\" onClick={handleRemoveSelectedImageClick}>\r\n              Remove\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <button type=\"button\" className=\"add-post-modal__upload-image-btn\" onClick={handleUploadImageBtnClick}>\r\n            <span className=\"add-post-modal__icon material-icons-outlined\">\r\n              perm_media\r\n            </span>\r\n            Upload\r\n          </button>\r\n        )}\r\n\r\n        <LoadingButton isLoading={form.isSubmitting} classes={{ root: 'add-post-modal__submit-btn' }} type=\"submit\">\r\n          Submit\r\n        </LoadingButton>\r\n      </form>\r\n\r\n      <input type=\"file\" ref={fileInputRef} onChange={handleFileInputChange} hidden />\r\n    </Modal>\r\n  </>\r\n}\r\n\r\n","import classNames from \"classnames\"\r\nimport { db } from \"firebase\"\r\nimport { FirestoreCategory } from \"firebase/documentTypes\"\r\nimport { addDoc, collection } from \"firebase/firestore\"\r\nimport { FormikErrors, useFormik } from \"formik\"\r\nimport { commonActions, selectCurrentVisibleModal } from \"redux/reducers/commonReducer\"\r\nimport { useAppDispatch, useAppSelector } from \"utils/hooks\"\r\nimport LoadingButton from \"./LoadingButton\"\r\nimport Modal from \"./Modal\"\r\n\r\ntype Props = {\r\n\r\n}\r\n\r\ntype FormValues = {\r\n  name: string\r\n}\r\n\r\nexport default ({}: Props) => {\r\n  const form = useFormik<FormValues>({\r\n    initialValues: {\r\n      name: ''\r\n    },\r\n    validate(v) {\r\n      const errors: FormikErrors<FormValues> = {}\r\n\r\n      if (!v.name.trim()) {\r\n        errors.name = 'Empty name'\r\n      }\r\n\r\n      return errors\r\n    },\r\n    async onSubmit(v) {\r\n      try {\r\n        const category: FirestoreCategory = {\r\n          name: v.name\r\n        }\r\n\r\n        await addDoc(collection(db, 'categories'), category)\r\n      } catch {\r\n        dispatch(commonActions.openAlert({ type: 'error', text: 'Cannot create category' }))\r\n      } finally {\r\n        dispatch(commonActions.openAlert({ type: 'success', text: 'Created category' }))\r\n      }\r\n    }\r\n  })\r\n\r\n  const dispatch = useAppDispatch()\r\n\r\n  const isHidden = useAppSelector((state) => selectCurrentVisibleModal(state)) !== 'add-category'\r\n\r\n  const handleClose = () => {\r\n    dispatch(commonActions.setCurrentVisibleModal(null))\r\n  }\r\n\r\n  return (\r\n    <Modal title=\"Add Category\" className=\"add-category-modal\" isHidden={isHidden} onClose={handleClose}>\r\n      <form onSubmit={form.handleSubmit} className=\"add-category-modal__form\">\r\n        <input\r\n          type=\"text\"\r\n          className={classNames('add-category-modal__name-input', { 'add-category-modal__name-input--error': form.touched.name && form.errors.name })}\r\n          placeholder=\"Category name\"\r\n          {...form.getFieldProps('name')}\r\n        />\r\n\r\n        <LoadingButton isLoading={form.isSubmitting} className=\"add-category-modal__submit-btn\" type=\"submit\">\r\n          Create\r\n        </LoadingButton>\r\n      </form>\r\n    </Modal>\r\n  )\r\n}\r\n","import { onAuthStateChanged } from '@firebase/auth'\r\nimport { doc, getDoc } from '@firebase/firestore'\r\nimport { auth, db } from 'firebase'\r\nimport { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Redirect, Route, Switch, useHistory } from 'react-router'\r\nimport { authActions } from 'redux/reducers/authReducer'\r\nimport 'scss/index.scss'\r\nimport Alert from './Alert'\r\nimport AuthenticatedRoute from './AuthenticatedRoute'\r\nimport ViewImage from './ViewImage'\r\nimport AuthPage from './AuthPage'\r\nimport ProfilePage from './ProfilePage'\r\nimport UsersPage from './UsersPage'\r\nimport AddPostModal from './AddPostModal'\r\nimport Modal from './Modal'\r\nimport AddCategoryModal from './AddCategoryModal'\r\n\r\n\r\ntype Props = {\r\n  \r\n}\r\n\r\nexport default (props: Props) => {\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    onAuthStateChanged(auth, async (user) => {\r\n      if (user) {\r\n        dispatch(authActions.login(user.providerData[0]))\r\n        history.push('/profile')\r\n      } else {\r\n        dispatch(authActions.logout())\r\n        history.push('/auth?tab=login')\r\n      }\r\n    })\r\n  }, [])\r\n\r\n  return <>\r\n    <div className=\"app\">\r\n      <Switch>\r\n\r\n        <Route path=\"/\" exact>\r\n          <Redirect to=\"/profile\" />\r\n        </Route>\r\n\r\n        <Route path=\"/auth\" exact>\r\n          <AuthPage />\r\n        </Route>\r\n\r\n        <AuthenticatedRoute path=\"/profile\" exact>\r\n          <ProfilePage />\r\n        </AuthenticatedRoute>\r\n\r\n        <AuthenticatedRoute path=\"/users\" exact>\r\n          <UsersPage />\r\n        </AuthenticatedRoute>\r\n\r\n      </Switch>\r\n    </div>\r\n\r\n    <ViewImage />\r\n    <Alert />\r\n    <AddPostModal />\r\n    <AddCategoryModal />\r\n  </>\r\n}\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\n\r\ntype ReduxCategory = {\r\n  id: string,\r\n  name: string\r\n}\r\n\r\ntype CategoriesState = {\r\n  selectedId: string | null,\r\n  list: ReduxCategory[]\r\n}\r\n\r\nconst initialState: CategoriesState = {\r\n  selectedId: null,\r\n  list: []\r\n}\r\n\r\nconst categoriesSlice = createSlice({\r\n  name: 'categories',\r\n  initialState,\r\n  reducers: {\r\n\r\n  }\r\n})\r\n\r\nexport const categoriesActions = categoriesSlice.actions\r\n\r\nexport default categoriesSlice.reducer\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport authReducer from './reducers/authReducer'\r\nimport categoriesReducer from './reducers/categoriesReducer'\r\nimport commonReducer from './reducers/commonReducer'\r\nimport postsReducer from './reducers/postsReducer'\r\n\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    common: commonReducer,\r\n    posts: postsReducer,\r\n    categories: categoriesReducer\r\n  }\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\n\r\nexport type AppDispatch = typeof store.dispatch\r\n\r\nexport default store\r\n","import { StrictMode } from 'react'\nimport { render } from 'react-dom'\nimport App from './components/App'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport { Provider } from 'react-redux'\nimport store from 'redux/store'\n\n\nrender(\n  <StrictMode>\n    <Router basename=\"/image-gallery\">\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}